buildscript {
	ext.kotlin_version = '1.0.0'
	ext {
		springBootVersion = '1.3.3.RELEASE'
		kotlinVersion = '1.0.0'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 

jar {
	baseName = 'com.nethergrim.borg'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
//	compile('org.springframework.boot:spring-boot-starter-security') // todo add security package back
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile 'org.jsoup:jsoup:1.8.1' // html parcing
    compile 'org.apache.commons:commons-lang3:3.3.2'
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}
sourceSets {
	main.java.srcDirs += 'src/main/kotlin'
}
